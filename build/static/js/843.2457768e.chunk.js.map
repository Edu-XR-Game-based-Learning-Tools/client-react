{"version":3,"file":"static/js/843.2457768e.chunk.js","mappings":"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","sources":["features/quizArchive/hooks/index.ts","libs/core/firebase.ts","libs/utility/usePrompt.ts","features/quizArchive/components/EditQuiz/basic3DViewer.tsx","features/quizArchive/components/EditQuiz/index.tsx","pages/EditQuizPage.tsx"],"sourcesContent":["import { useCallback } from 'react'\r\n\r\nimport { useAppDispatch, useAppSelector } from 'store/hooks'\r\n\r\nimport { quizArchiveActions, quizArchiveSelectors } from '../store'\r\nimport { QuizCollectionDto, QuizCollectionListDto } from '../types'\r\n\r\nexport type Operators = {\r\n  quizList: QuizCollectionListDto\r\n  editQuiz: QuizCollectionDto\r\n  getQuizCollectionList: () => void\r\n  getQuizCollection: (data: number) => void\r\n  updateQuizCollection: (data: QuizCollectionDto) => void\r\n  deleteQuizCollection: (data: QuizCollectionDto) => void\r\n}\r\n\r\nconst useQuizArchiveService = (): Readonly<Operators> => {\r\n  const dispatch = useAppDispatch()\r\n  const selects = useAppSelector(quizArchiveSelectors)\r\n\r\n  return {\r\n    quizList: selects.quizCollectionList,\r\n    editQuiz: selects.editCollection,\r\n\r\n    getQuizCollectionList: useCallback(\r\n      () => {\r\n        dispatch(quizArchiveActions.getQuizCollectionList())\r\n      },\r\n      [dispatch],\r\n    ),\r\n    getQuizCollection: useCallback(\r\n      (data: number) => {\r\n        dispatch(quizArchiveActions.getQuizCollection(data))\r\n      },\r\n      [dispatch],\r\n    ),\r\n    updateQuizCollection: useCallback(\r\n      (data: QuizCollectionDto) => {\r\n        dispatch(quizArchiveActions.updateQuizCollection(data))\r\n      },\r\n      [dispatch],\r\n    ),\r\n    deleteQuizCollection: useCallback(\r\n      (data: QuizCollectionDto) => {\r\n        dispatch(quizArchiveActions.deleteQuizCollection(data))\r\n      },\r\n      [dispatch],\r\n    ),\r\n  }\r\n}\r\n\r\nexport default useQuizArchiveService\r\n","// Import the functions you need from the SDKs you need\r\nimport { getAnalytics } from \"firebase/analytics\"\r\nimport { initializeApp } from \"firebase/app\"\r\nimport { getStorage, ref } from \"firebase/storage\"\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAVLDCA6PuI02T7vC2K8_Czvu8RrwDBV9o\",\r\n  authDomain: \"user-e8717.firebaseapp.com\",\r\n  databaseURL: \"https://user-e8717.firebaseio.com\",\r\n  projectId: \"user-e8717\",\r\n  storageBucket: \"user-e8717.appspot.com\",\r\n  messagingSenderId: \"160842378884\",\r\n  appId: \"1:160842378884:web:0e17dbe94496c343e59cd1\",\r\n  measurementId: \"G-TQBNYZ5DJB\"\r\n}\r\n\r\n// Initialize Firebase\r\nexport const app = initializeApp(firebaseConfig)\r\nexport const analytics = getAnalytics(app)\r\nexport const cloudStorage = getStorage(app)\r\nexport const getQuizStorageRef = (postLocation: string = '') => ref(cloudStorage, `/quiz-file-upload${postLocation ? `/${postLocation}` : ''}`)\r\n","import { History, Transition } from 'history'\r\nimport { useCallback, useContext, useEffect } from \"react\"\r\nimport { Navigator } from 'react-router'\r\nimport { UNSAFE_NavigationContext as NavigationContext } from \"react-router-dom\"\r\n\r\ntype ExtendNavigator = Navigator & Pick<History, \"block\">\r\n\r\nexport function useBlocker(blocker: (tx: Transition) => void, when = true) {\r\n  const { navigator } = useContext(NavigationContext)\r\n\r\n  useEffect((): () => void => {\r\n    if (!when) return () => { }\r\n\r\n    const unblock = (navigator as ExtendNavigator).block((tx) => {\r\n      const autoUnblockingTx = {\r\n        ...tx,\r\n        retry() {\r\n          unblock()\r\n          tx.retry()\r\n        },\r\n      }\r\n\r\n      blocker(autoUnblockingTx)\r\n    })\r\n\r\n    return unblock\r\n  }, [navigator, blocker, when])\r\n}\r\n\r\nexport default function usePrompt(message: string, when = true) {\r\n  const blocker = useCallback((tx: Transition) => {\r\n    if (window.confirm(message)) tx.retry() // eslint-disable-line no-alert\r\n  }, [message])\r\n\r\n  useBlocker(blocker, when)\r\n}","import * as OV from \"online-3d-viewer\"\r\nimport { useEffect, useRef, useState } from \"react\"\r\n\r\ninterface Props {\r\n  file: File | null\r\n  url: string | null\r\n}\r\n\r\nconst Basic3DViewer = ({ file = null, url = null }: Props) => {\r\n  // The viewer is attached to parentDiv.current\r\n  const parentDiv = useRef<HTMLDivElement>(null)\r\n  // However, this really attaches the canvas element to the parentDiv, we need to also keep a reference for the viewer object itself which we'll do with viewerRef\r\n  const viewerRef = useRef<OV.EmbeddedViewer | null>(null)\r\n  const ifFirstLoad = useRef<boolean>(true)\r\n  const [isRefresh, setIsRefresh] = useState<boolean>(false)\r\n\r\n  useEffect(() => {\r\n    if (!isRefresh) ifFirstLoad.current = true\r\n  }, [isRefresh])\r\n\r\n  useEffect(() => {\r\n    // If there is a file passed in that isn't null, instantiate the viewer object\r\n    if (file || url) {\r\n      // Set the location of the libraries needed to load different models to lib, which in nextjs will point to \"/public/libs\"\r\n      OV.SetExternalLibLocation(\"libs\")\r\n      // Initialize all the 3D viewer elements\r\n      OV.Init3DViewerElements(null)\r\n      // Before initializing the viewer, check that there isn't already a viewer object attached to viewerRef\r\n      if (viewerRef.current === null) {\r\n        // This is fairly self explanatory, initialize the viewer object with reasonable defaults. See the documentation for this component to see what other options you have\r\n        const viewer = new OV.EmbeddedViewer(parentDiv.current!, {\r\n          // camera: new OV.Camera(\r\n          //   new OV.Coord3D(-150.0, 200.0, 300.0),\r\n          //   new OV.Coord3D(0.0, 0.0, 0.0),\r\n          //   new OV.Coord3D(0.0, 1.0, 0.0),\r\n          //   45.0\r\n          // ),\r\n          backgroundColor: new OV.RGBAColor(255, 255, 255, 0),\r\n          defaultColor: new OV.RGBColor(255, 255, 255),\r\n          edgeSettings: new OV.EdgeSettings(\r\n            false, new OV.RGBColor(255, 255, 255), 1,\r\n          ),\r\n          // environmentMap: [\r\n          //   // \"../website/assets/envmaps/grayclouds/posx.jpg\",\r\n          //   // \"../website/assets/envmaps/grayclouds/negx.jpg\",\r\n          //   // \"../website/assets/envmaps/grayclouds/posy.jpg\",\r\n          //   // \"../website/assets/envmaps/grayclouds/negy.jpg\",\r\n          //   // \"../website/assets/envmaps/grayclouds/posz.jpg\",\r\n          //   // \"../website/assets/envmaps/grayclouds/negz.jpg\",\r\n          // ],\r\n          onModelLoaded: () => {\r\n            console.log(viewerRef.current!.GetViewer())\r\n          },\r\n        })\r\n        // ! This feels stupid but unfortunately, this resizing event can persist after clean up and lead to an error, one way to avoid this happening is to just overwrite the method so that it doesn't call this.viewer\r\n        // ! Ideally, you'd clean it up during cleanup but I just found it easier to replace and ignore this event instead\r\n        viewer.Resize = () => {\r\n          console.log(\"I'm not resizing\")\r\n        }\r\n\r\n        // Here, we assign the viewer object viewerRef.current to keep hold of it for later use\r\n        viewerRef.current = viewer\r\n\r\n        if (file) {\r\n          // I've found This method of loading the file into the viewer works most reliably\r\n          // Create a new data transfer object, add a File interface to it's items, grab the files and assign them to file_list and then load the model into the viewer with them\r\n          const dt = new DataTransfer()\r\n          console.log(file)\r\n          dt.items.add(file)\r\n          const fileList = Array.from(dt.files)\r\n          viewer.LoadModelFromFileList(fileList)\r\n        } else if (url) {\r\n          const splits = url.split('.')\r\n          const ext = splits[splits.length - 1].split('?')[0]\r\n\r\n          // Fetch and turn url to file\r\n          // fetch(url).then(res => res.blob()).then(blob => {\r\n          //   const fileFromUrl = new File([blob], `filename.${ext}`, { type: blob.type })\r\n          //   // I've found This method of loading the file into the viewer works most reliably\r\n          //   // Create a new data transfer object, add a File interface to it's items, grab the files and assign them to file_list and then load the model into the viewer with them\r\n          //   const dt = new DataTransfer()\r\n          //   dt.items.add(fileFromUrl)\r\n          //   const fileList = Array.from(dt.files)\r\n          //   console.log(fileList)\r\n          //   viewer.LoadModelFromFileList(fileList)\r\n          // })\r\n\r\n          // To load a file into the viewer using the url, we first pass a file name, OV.FileSource.Url and then the url of the model to the OV.InputFile constructor, put the newly created object in an array and save it as inputFiles\r\n          const inputFiles = [\r\n            new OV.InputFile(`filename.${ext}`, OV.FileSource.Url, url),\r\n          ]\r\n          // Then we just pass inputFiles into the below method and viola\r\n          viewer.LoadModelFromInputFiles(inputFiles)\r\n\r\n          if (ifFirstLoad.current) {\r\n            ifFirstLoad.current = false\r\n            setIsRefresh((prev) => !prev)\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      // ! We need to correctly clean up our viewer, it's listeners and related model data to ensure memory leaks don't occur\r\n      // ! If you want to see what can happen if this isn't here, comment out this code and repeatedly spin up multiple viewers and then do a heap snapshot with chrome and you will see a massive amount of data that isn't being cleaned up by the garbage collector\r\n      // We first check that both the viewerRef and parentDiv aren't null so we don't call a method on an object that doesn't exist\r\n      if (viewerRef.current !== null && parentDiv.current !== null) {\r\n        // ! I threw the kitchen sink at this to get rid of the memory leaks so some of this code is definitely redundant and there is likely a cleaner way of doing this\r\n        // We delete the model, reset the state of the renderer and clear the viewer\r\n        delete viewerRef.current.model\r\n        viewerRef.current.viewer.renderer.resetState()\r\n        viewerRef.current.viewer.Clear()\r\n        // Then we delete the whole viewer object\r\n        // delete viewerRef.current.viewer\r\n        // We grab canvas element before we delete it to ensure we lose the webgl context and it doesn't persist\r\n        const gl = viewerRef.current.canvas.getContext(\"webgl2\")\r\n        gl!.getExtension(\"WEBGL_lose_context\")!.loseContext()\r\n        // We replace the canvas element which will also replace all the event listeners which can cause the element and things associated with it to not be correctly cleaned up by the garbage collector\r\n        const tempClone = viewerRef.current.canvas.cloneNode(true)\r\n        viewerRef.current!.canvas!.parentNode!.replaceChild(\r\n          tempClone,\r\n          viewerRef.current.canvas\r\n        )\r\n        // Finally, we delete the canvas element and set the viewerRef.current to null, meaning everything should be properly cleaned up\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        parentDiv.current.removeChild(parentDiv.current.children[0])\r\n        viewerRef.current = null\r\n      }\r\n    }\r\n  }, [file, url, isRefresh])\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'right',\r\n          width: '100%',\r\n          height: '100%'\r\n        }}\r\n        ref={parentDiv}\r\n        role={\"img\"}\r\n        aria-label=\"Canvas showing the model in the 3D Viewer\"\r\n        className=\"relative flex  flex-col items-center justify-center p-2 h-72 w-72 border-2 border-black rounded-sm\"\r\n      ></div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Basic3DViewer","/* eslint-disable no-alert */\r\n/* eslint-disable @typescript-eslint/indent */\r\n/* eslint-disable @typescript-eslint/no-unused-vars */\r\nimport {\r\n  Box,\r\n  Button,\r\n  Drawer,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n  Tooltip,\r\n  Typography,\r\n  styled,\r\n} from '@mui/material'\r\nimport { blue, green, orange, red } from '@mui/material/colors'\r\nimport { ActionCreatorWithPayload } from '@reduxjs/toolkit/dist/createAction'\r\nimport { getDownloadURL, uploadBytes } from 'firebase/storage'\r\nimport * as OV from 'online-3d-viewer'\r\nimport React, { useRef } from 'react'\r\nimport { connect, useSelector } from 'react-redux'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\n\r\nimport images from 'config/images'\r\nimport { AuthType } from 'features/authentication'\r\nimport { globalActions } from 'features/global/store/slice'\r\nimport useQuizArchiveService from 'features/quizArchive/hooks'\r\nimport { getJwtData } from 'libs/core/configureAxios'\r\nimport { getQuizStorageRef } from 'libs/core/firebase'\r\nimport LoadingComponent from 'libs/ui/components/Loading'\r\nimport usePrompt from 'libs/utility/usePrompt'\r\nimport { ReducerType, RootState } from 'store'\r\nimport { useAppDispatch } from 'store/hooks'\r\n\r\nimport { QuizCollectionDto, initQuizCollectionDto, initQuizDto } from '../../types'\r\n\r\nimport Basic3DViewer from './basic3DViewer'\r\n\r\nconst mapStateToProps = (state: ReducerType) => ({\r\n  authData: state.authentication.authData,\r\n  isLoading: state.global.isLoading,\r\n  setIsLoading: globalActions.setIsLoading,\r\n  editCollection: state.quizArchive.editCollection,\r\n})\r\n\r\ninterface EditQuizProps {\r\n  authData: AuthType\r\n  isLoading: boolean\r\n  setIsLoading: ActionCreatorWithPayload<boolean, 'global/setIsLoading'>\r\n  editCollection: QuizCollectionDto\r\n}\r\n\r\nconst TimerTextField = styled(TextField)({\r\n  '& input:valid + fieldset': {\r\n    borderColor: '#E0E3E7',\r\n    borderWidth: 1,\r\n  },\r\n  '& input:invalid + fieldset': {\r\n    borderColor: 'red',\r\n    borderWidth: 1,\r\n  },\r\n  '& input:valid:focus + fieldset': {\r\n    borderLeftWidth: 4,\r\n    padding: '4px !important', // override inline-style\r\n  },\r\n})\r\n\r\nconst optionColors = [red[500], blue[500], green[500], orange[500]]\r\n\r\nconst EditQuizContainer = (props: EditQuizProps) => {\r\n  const isFirstLoad = useRef(true)\r\n  const { id } = useParams<{ id: string }>()\r\n  const { isLoading, setIsLoading } = props\r\n  const editCollectionSelector = useSelector((state: RootState) => state.quizArchive.editCollection)\r\n  const navigate = useNavigate()\r\n  const dispatch = useAppDispatch()\r\n  const { getQuizCollection, updateQuizCollection } = useQuizArchiveService()\r\n  const [collectionData, setCollectionData] =\r\n    React.useState<QuizCollectionDto>(initQuizCollectionDto)\r\n  const [activeQuizIndex, setActiveQuizIndex] = React.useState<number>(0)\r\n  const currentQuiz = React.useCallback(\r\n    () => collectionData.quizzes[activeQuizIndex],\r\n    [collectionData, activeQuizIndex],\r\n  )\r\n\r\n  const btnSize = { height: '2rem', width: '2rem' }\r\n\r\n  // Image & Model\r\n  const [visualState, setVisualState] = React.useState('3d')\r\n  const [imageFile, setImageFile] = React.useState<File | null>(null)\r\n  const [modelFile, setModelFile] = React.useState<File | null>(null)\r\n  const inputFileRef = useRef() as React.MutableRefObject<HTMLInputElement>\r\n  const isNotQuizImage = React.useCallback(\r\n    () => !(imageFile || currentQuiz().image),\r\n    [currentQuiz, imageFile],\r\n  )\r\n  const isNotQuizModel = React.useCallback(\r\n    () => !(modelFile || currentQuiz().model),\r\n    [currentQuiz, modelFile],\r\n  )\r\n\r\n  // #region First Load Fetch\r\n  React.useEffect(() => {\r\n    OV.SetExternalLibLocation('libs')\r\n    OV.Init3DViewerElements(null)\r\n  }, [])\r\n\r\n  React.useEffect(() => {\r\n    const eid = parseInt(id ?? '', 10)\r\n    if (Number.isNaN(eid)) {\r\n      alert('Invalid Url Params') // eslint-disable-line no-alert\r\n      navigate('/')\r\n    } else getQuizCollection(eid)\r\n  }, [dispatch, getQuizCollection, id, navigate])\r\n\r\n  React.useEffect(() => {\r\n    if (!isFirstLoad.current && !editCollectionSelector.eId) {\r\n      alert('Invalid Quiz') // eslint-disable-line no-alert\r\n      navigate('/')\r\n    }\r\n    isFirstLoad.current = false\r\n    setImageFile(null)\r\n    setModelFile(null)\r\n    setCollectionData(editCollectionSelector)\r\n    setActiveQuizIndex(prev => {\r\n      if (prev > editCollectionSelector.quizzes.length - 1) return 0\r\n      return prev\r\n    })\r\n  }, [editCollectionSelector, navigate])\r\n  // #endregion First Load Fetch\r\n\r\n  React.useEffect(() => {\r\n    if (collectionData.quizzes.length)\r\n      setVisualState(collectionData.quizzes[activeQuizIndex].image ? '2d' : '3d')\r\n  }, [activeQuizIndex, collectionData.quizzes])\r\n\r\n  // #region Data Manipulation\r\n  const checkIfIsChangeAndNotSave = React.useCallback((): boolean => {\r\n    if (\r\n      collectionData !== editCollectionSelector ||\r\n      JSON.stringify(collectionData.quizzes) !== JSON.stringify(editCollectionSelector.quizzes)\r\n    ) {\r\n      return false\r\n    }\r\n    return true\r\n  }, [collectionData, editCollectionSelector])\r\n\r\n  usePrompt(\"The changes won't be saved, is it ok?\", !checkIfIsChangeAndNotSave())\r\n\r\n  const checkIfQuizIsChangeAndNotSave = React.useCallback((): boolean => {\r\n    if (\r\n      JSON.stringify(collectionData.quizzes[activeQuizIndex]) !==\r\n      JSON.stringify(editCollectionSelector.quizzes[activeQuizIndex])\r\n    ) {\r\n      return window.confirm(\"The changes won't be saved, is it ok?\") // eslint-disable-line no-alert\r\n    }\r\n    return true\r\n  }, [activeQuizIndex, collectionData.quizzes, editCollectionSelector.quizzes])\r\n\r\n  const uploadQuizFile = React.useCallback(\r\n    async (file: File) => {\r\n      const jwtData = getJwtData()\r\n      if (!jwtData) {\r\n        alert('Invalid Token Data') // eslint-disable-line no-alert\r\n        navigate('/')\r\n        return null\r\n      }\r\n      const storageRef = getQuizStorageRef(`${jwtData.id}/${file.name}`)\r\n      const response = await uploadBytes(storageRef, file)\r\n      const url = await getDownloadURL(response.ref)\r\n      return url\r\n    },\r\n    [navigate],\r\n  )\r\n\r\n  const assignFileToQuiz = React.useCallback(async () => {\r\n    const promiseFunc = []\r\n    if (imageFile) promiseFunc.push(uploadQuizFile(imageFile))\r\n    if (modelFile) promiseFunc.push(uploadQuizFile(modelFile))\r\n\r\n    const urls = await Promise.all(promiseFunc)\r\n\r\n    const quizzes = collectionData.quizzes.map((quiz, idx) =>\r\n      activeQuizIndex === idx\r\n        ? {\r\n            ...quiz,\r\n            image: imageFile ? urls[0] : quiz.image,\r\n            model: modelFile ? urls[urls.length - 1] : quiz.model,\r\n          }\r\n        : quiz,\r\n    )\r\n    const newData = { ...collectionData, quizzes }\r\n    return newData\r\n  }, [activeQuizIndex, collectionData, imageFile, modelFile, uploadQuizFile])\r\n\r\n  const validateForm = React.useCallback((): string => {\r\n    if (!currentQuiz().question || !currentQuiz().question.trim()) return 'Question cannot be empty'\r\n    if (!currentQuiz().answers || currentQuiz().answers.filter(answer => answer.trim()).length < 2)\r\n      return 'At least two non-empty answers should be filled'\r\n    if (!currentQuiz().duration || currentQuiz().duration < 10 || currentQuiz().duration > 240)\r\n      return 'Duration should be between 10 and 240 seconds'\r\n    if (isNotQuizImage() && isNotQuizModel())\r\n      return 'Quiz should contains at least image or model to visualize'\r\n    return ''\r\n  }, [currentQuiz, isNotQuizImage, isNotQuizModel])\r\n\r\n  const handleSaveClick = React.useCallback(async () => {\r\n    const validateMsg = validateForm()\r\n    if (validateMsg) {\r\n      alert(validateMsg) // eslint-disable-line no-alert\r\n      return\r\n    }\r\n\r\n    dispatch(setIsLoading(true))\r\n    const newData = await assignFileToQuiz()\r\n    updateQuizCollection(newData)\r\n    dispatch(setIsLoading(false))\r\n  }, [validateForm, dispatch, setIsLoading, assignFileToQuiz, updateQuizCollection])\r\n\r\n  const handleDeleteClick = React.useCallback(async () => {\r\n    if (window.confirm('Are you sure you want to delete this question?')) {\r\n      setCollectionData(prev => {\r\n        const isNewQuestion = prev.quizzes[activeQuizIndex].eId === null\r\n        const quizzes = prev.quizzes.filter((_, idx) => activeQuizIndex !== idx)\r\n        const newData = { ...prev, quizzes }\r\n        if (!isNewQuestion) updateQuizCollection(newData)\r\n        setActiveQuizIndex(prev1 => {\r\n          if (prev1 > quizzes.length - 1) return 0\r\n          return prev1\r\n        })\r\n        return newData\r\n      })\r\n    }\r\n  }, [activeQuizIndex, updateQuizCollection])\r\n\r\n  const handleDeleteVisual = React.useCallback(() => {\r\n    const is3D = visualState === '3d'\r\n    if (!is3D) {\r\n      if (imageFile) setImageFile(null)\r\n      else\r\n        setCollectionData(prev => {\r\n          const quizzes = prev.quizzes.map((quiz, idx) =>\r\n            activeQuizIndex === idx ? { ...quiz, image: null } : quiz,\r\n          )\r\n          const newData = { ...prev, quizzes }\r\n          return newData\r\n        })\r\n    } else if (modelFile) {\r\n      setModelFile(null)\r\n    } else {\r\n      setCollectionData(prev => {\r\n        const quizzes = prev.quizzes.map((quiz, idx) =>\r\n          activeQuizIndex === idx ? { ...quiz, model: null } : quiz,\r\n        )\r\n        const newData = { ...prev, quizzes }\r\n        return newData\r\n      })\r\n    }\r\n  }, [activeQuizIndex, imageFile, modelFile, visualState])\r\n  // #endregion Data Manipulation\r\n\r\n  // #region Drawer\r\n  const [isOpenDrawer, setIsOpenDrawer] = React.useState(false)\r\n  const anchor = 'left'\r\n\r\n  const toggleDrawer = React.useCallback((open: boolean) => {\r\n    setIsOpenDrawer(open)\r\n  }, [])\r\n\r\n  const handleAddNewClick = React.useCallback(() => {\r\n    if (!checkIfQuizIsChangeAndNotSave()) return\r\n    setCollectionData(prev => {\r\n      const newData = { ...prev, quizzes: [...prev.quizzes, initQuizDto] }\r\n      return newData\r\n    })\r\n    setActiveQuizIndex(collectionData.quizzes.length)\r\n    toggleDrawer(false)\r\n  }, [checkIfQuizIsChangeAndNotSave, collectionData.quizzes.length, toggleDrawer])\r\n\r\n  const drawerAddNewQuiz = () => (\r\n    <Box display={'flex'} justifyContent={'center'} style={{ marginTop: '0.5rem' }}>\r\n      <IconButton onClick={handleAddNewClick} style={{ width: '100%', borderRadius: '0' }}>\r\n        {collectionData.quizzes.length > 0 ? '' : 'Empty Quiz, Add?'}\r\n        <images.AddIcon />\r\n      </IconButton>\r\n    </Box>\r\n  )\r\n\r\n  const handleSelectQuizClick = React.useCallback(\r\n    (index: number) => {\r\n      if (!checkIfQuizIsChangeAndNotSave()) return\r\n      setActiveQuizIndex(index)\r\n      toggleDrawer(false)\r\n    },\r\n    [checkIfQuizIsChangeAndNotSave, toggleDrawer],\r\n  )\r\n\r\n  const drawerItem = (index: number) => {\r\n    const quizData = collectionData.quizzes[index]\r\n    return (\r\n      <Grid key={`drawer-${index}`} container>\r\n        <Grid\r\n          item\r\n          xs={2}\r\n          display={'flex'}\r\n          flexDirection={'column'}\r\n          justifyContent={'space-between'}\r\n        >\r\n          <Typography textAlign={'center'}>\r\n            {index + 1}.{quizData.name}\r\n          </Typography>\r\n\r\n          <Tooltip title=\"Delete question\">\r\n            <IconButton>\r\n              <images.DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Grid>\r\n        <Grid item xs={10}>\r\n          <Button\r\n            variant=\"text\"\r\n            onClick={() => handleSelectQuizClick(index)}\r\n            style={{ width: '100%' }}\r\n          >\r\n            <Grid display={'flex'} flexDirection={'column'} style={{ width: '100%' }}>\r\n              <img\r\n                width={'100%'}\r\n                style={{ aspectRatio: '16/9', objectFit: 'contain' }}\r\n                alt=\"image-banner\"\r\n                src={quizData.image!}\r\n              />\r\n              <Grid container spacing={0.5} marginTop={0}>\r\n                {quizData.answers.map((_, idx) => (\r\n                  <Grid key={`drawer-answer-${index}-${idx}`} item xs={6}>\r\n                    <Box\r\n                      width={'100%'}\r\n                      padding={0.5}\r\n                      sx={{ backgroundColor: optionColors[idx], aspectRatio: '4/1' }}\r\n                    >\r\n                      {idx === quizData.correctIdx ? (\r\n                        <Box\r\n                          display={'flex'}\r\n                          alignItems={'center'}\r\n                          justifyContent={'center'}\r\n                          height={'100%'}\r\n                          sx={{ aspectRatio: '1/1', borderRadius: '50%', backgroundColor: 'white' }}\r\n                        >\r\n                          <images.CheckIcon />\r\n                        </Box>\r\n                      ) : (\r\n                        <></>\r\n                      )}\r\n                    </Box>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n            </Grid>\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  const drawer = () => (\r\n    <React.Fragment key={anchor}>\r\n      <Drawer anchor={anchor} open={isOpenDrawer} onClose={() => toggleDrawer(false)}>\r\n        <Box sx={{ width: '25vw' }}>\r\n          {collectionData.quizzes.length > 0 ? (\r\n            collectionData.quizzes.map((_, index) => drawerItem(index))\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {drawerAddNewQuiz()}\r\n        </Box>\r\n      </Drawer>\r\n    </React.Fragment>\r\n  )\r\n  // #endregion End Drawer\r\n\r\n  const questionTitle = () => (\r\n    <Grid\r\n      container\r\n      display={'flex'}\r\n      justifyContent={'space-between'}\r\n      padding={'0 2rem'}\r\n      marginBottom={'1rem'}\r\n    >\r\n      <Box>\r\n        <Typography display={'inline'} paddingX={'1rem'}>\r\n          Quiz ID: {currentQuiz().eId ?? '-'}\r\n        </Typography>\r\n        <Typography display={'inline'}>\r\n          Question No: {activeQuizIndex + 1}/{collectionData.quizzes.length}\r\n        </Typography>\r\n        <br />\r\n        <IconButton onClick={() => toggleDrawer(true)} style={{ marginLeft: '0.5rem' }}>\r\n          {!isOpenDrawer ? (\r\n            <images.KeyboardDoubleArrowRightIcon />\r\n          ) : (\r\n            <images.KeyboardDoubleArrowLeftIcon />\r\n          )}\r\n        </IconButton>\r\n      </Box>\r\n      <Box>\r\n        <Tooltip title={'Save'} sx={{ marginRight: '1rem' }}>\r\n          <IconButton style={{ backgroundColor: 'white' }} onClick={handleSaveClick}>\r\n            <images.SaveIcon style={{ ...btnSize }} />\r\n          </IconButton>\r\n        </Tooltip>\r\n        <Tooltip title={'Delete'}>\r\n          <IconButton style={{ backgroundColor: 'white' }} onClick={handleDeleteClick}>\r\n            <images.DeleteIcon style={{ ...btnSize }} />\r\n          </IconButton>\r\n        </Tooltip>\r\n      </Box>\r\n    </Grid>\r\n  )\r\n\r\n  const questionTimer = () => (\r\n    <Box position={'absolute'} top={'50%'} left={0} paddingLeft={'1rem'}>\r\n      <TimerTextField\r\n        id=\"timer-validation-input\"\r\n        label=\"Timer\"\r\n        type=\"number\"\r\n        required\r\n        value={currentQuiz().duration}\r\n        onChange={evt => {\r\n          setCollectionData(prev => {\r\n            const quizzes = prev.quizzes.map((quiz, idx) =>\r\n              activeQuizIndex === idx\r\n                ? { ...quiz, duration: parseInt(evt.target.value, 10) }\r\n                : quiz,\r\n            )\r\n            const newData = { ...prev, quizzes }\r\n            return newData\r\n          })\r\n        }}\r\n        variant=\"outlined\"\r\n        InputProps={{ inputProps: { min: 10, max: 240 } }}\r\n        style={{ width: 'auto', borderRadius: '1rem' }}\r\n      />\r\n    </Box>\r\n  )\r\n\r\n  const question = () => (\r\n    <Grid container spacing={0.5} marginTop={0} direction={'column'}>\r\n      <Grid item xs={8}>\r\n        <TextField\r\n          type=\"text\"\r\n          required\r\n          value={currentQuiz().question}\r\n          onChange={evt => {\r\n            setCollectionData(prev => {\r\n              const quizzes = prev.quizzes.map((quiz, idx) =>\r\n                activeQuizIndex === idx ? { ...quiz, question: evt.target.value } : quiz,\r\n              )\r\n              const newData = { ...prev, quizzes }\r\n              return newData\r\n            })\r\n          }}\r\n          variant=\"outlined\"\r\n          multiline\r\n          maxRows={12}\r\n          sx={{\r\n            input: { color: 'white', height: '100%' },\r\n            '& .MuiInputBase-root,.MuiInputBase-root:hover': {\r\n              height: '100%',\r\n              backgroundColor: '#00000055',\r\n              color: 'white',\r\n              '& > fieldset': {\r\n                borderColor: '#E0E3E755 !important',\r\n                borderWidth: 1,\r\n              },\r\n            },\r\n          }}\r\n          style={{ width: '100%' }}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n\r\n  const visual = function visual() {\r\n    const is3D = visualState === '3d'\r\n\r\n    const button3d = (\r\n      <IconButton\r\n        style={{ backgroundColor: is3D ? blue[300] : 'white' }}\r\n        disabled={is3D}\r\n        onClick={() => {\r\n          setVisualState('3d')\r\n        }}\r\n      >\r\n        <images.ViewInAr style={{ ...btnSize }} />\r\n      </IconButton>\r\n    )\r\n    const button2d = (\r\n      <IconButton\r\n        style={{ backgroundColor: !is3D ? blue[300] : 'white' }}\r\n        disabled={!is3D}\r\n        onClick={() => {\r\n          setVisualState('2d')\r\n        }}\r\n      >\r\n        <images.Image style={{ ...btnSize }} />\r\n      </IconButton>\r\n    )\r\n\r\n    const activeFileTypeString = () => (is3D ? 'model' : 'image')\r\n    const isAdd = !is3D ? isNotQuizImage() : isNotQuizModel()\r\n\r\n    const addOrUpdateButton = (\r\n      <Tooltip title={isAdd ? `Add ${activeFileTypeString()}` : `Update ${activeFileTypeString()}`}>\r\n        <IconButton\r\n          style={{ backgroundColor: 'white' }}\r\n          onClick={() => inputFileRef.current.click()}\r\n        >\r\n          {isAdd ? (\r\n            <images.AddIcon style={{ ...btnSize }} />\r\n          ) : (\r\n            <images.EditIcon style={{ ...btnSize }} />\r\n          )}\r\n        </IconButton>\r\n      </Tooltip>\r\n    )\r\n\r\n    const modelView = () =>\r\n      isNotQuizModel() ? (\r\n        <Box style={{ ...btnSize, alignSelf: 'center', display: !is3D ? 'none' : 'block' }}>\r\n          {addOrUpdateButton}\r\n        </Box>\r\n      ) : (\r\n        <Box\r\n          style={{\r\n            width: '100%',\r\n            height: '100%',\r\n            border: '2px solid',\r\n            position: 'absolute',\r\n            display: !is3D ? 'none' : 'block',\r\n          }}\r\n        >\r\n          <Basic3DViewer file={modelFile} url={currentQuiz().model} />\r\n        </Box>\r\n      )\r\n    const imageView = () =>\r\n      isNotQuizImage() ? (\r\n        <Box style={{ ...btnSize, alignSelf: 'center' }}>{addOrUpdateButton}</Box>\r\n      ) : (\r\n        <img\r\n          style={{ height: '100%', width: '100%', objectFit: 'contain' }}\r\n          src={!imageFile ? currentQuiz().image! : URL.createObjectURL(imageFile)}\r\n        />\r\n      )\r\n\r\n    return (\r\n      <Grid\r\n        container\r\n        spacing={0.5}\r\n        marginTop={0}\r\n        marginRight={'5rem'}\r\n        direction={'column'}\r\n        flexGrow={1}\r\n        maxHeight={'60vh'}\r\n      >\r\n        <Box\r\n          height={'95%'}\r\n          position={'relative'}\r\n          display={'flex'}\r\n          alignItems={'start'}\r\n          justifyContent={isAdd ? 'center' : 'right'}\r\n          paddingRight={'1rem'}\r\n          maxHeight={'100%'}\r\n        >\r\n          {modelView()}\r\n          {!is3D ? imageView() : <></>}\r\n          <Box\r\n            position={'absolute'}\r\n            left={'100%'}\r\n            display={'flex'}\r\n            flexDirection={'column'}\r\n            gap={1}\r\n          >\r\n            {!is3D ? <Tooltip title=\"3D Model\">{button3d}</Tooltip> : button3d}\r\n            {is3D ? <Tooltip title=\"Image\">{button2d}</Tooltip> : button2d}\r\n            {addOrUpdateButton}\r\n            {(is3D && !isNotQuizModel()) || (!is3D && !isNotQuizImage()) ? (\r\n              <Tooltip title={`Remove ${activeFileTypeString()}`}>\r\n                <IconButton\r\n                  style={{ backgroundColor: 'white' }}\r\n                  onClick={() => handleDeleteVisual()}\r\n                >\r\n                  <images.DeleteIcon style={{ ...btnSize }} />\r\n                </IconButton>\r\n              </Tooltip>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n        <input\r\n          ref={inputFileRef}\r\n          onClick={evt => {\r\n            evt.currentTarget.value = '' // Reset selected file\r\n          }}\r\n          onChange={evt => {\r\n            if (evt.target.files?.length === 0 ?? false) return\r\n\r\n            if (!is3D) setImageFile(evt.target.files![0])\r\n            else setModelFile(evt.target.files![0])\r\n            // inputFileRef.current.files = null\r\n          }}\r\n          type=\"file\"\r\n          hidden\r\n          accept={!is3D ? 'image/*' : '.gltf, .fbx, .obj'}\r\n        />\r\n      </Grid>\r\n    )\r\n  }\r\n\r\n  const options = () => (\r\n    <Grid container rowSpacing={1} columnSpacing={3} marginRight={'5rem'}>\r\n      {currentQuiz().answers.map((_, index) => (\r\n        <Grid key={`answer-${index}`} item xs={6}>\r\n          <Box\r\n            padding={2}\r\n            gap={2}\r\n            sx={{\r\n              backgroundColor: optionColors[index],\r\n              height: '8rem',\r\n              width: '100%',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            {currentQuiz().correctIdx === index ? (\r\n              <Box\r\n                display={'flex'}\r\n                alignItems={'center'}\r\n                justifyContent={'center'}\r\n                height={'100%'}\r\n                sx={{ aspectRatio: '1/1', borderRadius: '50%', backgroundColor: 'white' }}\r\n              >\r\n                <images.CheckIcon />\r\n              </Box>\r\n            ) : (\r\n              <Box\r\n                display={'flex'}\r\n                alignItems={'center'}\r\n                justifyContent={'center'}\r\n                height={'100%'}\r\n                sx={{\r\n                  aspectRatio: '1/1',\r\n                  borderRadius: '50%',\r\n                  backgroundColor: 'white',\r\n                  cursor: 'pointer',\r\n                }}\r\n                onClick={() => {\r\n                  setCollectionData(prev => {\r\n                    const quizzes = prev.quizzes.map((quiz, idx) =>\r\n                      activeQuizIndex === idx ? { ...quiz, correctIdx: index } : quiz,\r\n                    )\r\n                    const newData = { ...prev, quizzes }\r\n                    return newData\r\n                  })\r\n                }}\r\n              ></Box>\r\n            )}\r\n            <TextField\r\n              type=\"text\"\r\n              required\r\n              value={currentQuiz().answers[index]}\r\n              onChange={evt => {\r\n                setCollectionData(prev => {\r\n                  const answers = prev.quizzes[activeQuizIndex].answers.map((ans, idx) =>\r\n                    index === idx ? evt.target.value : ans,\r\n                  )\r\n                  const quizzes = prev.quizzes.map((quiz, idx) =>\r\n                    activeQuizIndex === idx ? { ...quiz, answers } : quiz,\r\n                  )\r\n                  const newData = { ...prev, quizzes }\r\n                  return newData\r\n                })\r\n              }}\r\n              variant=\"outlined\"\r\n              multiline\r\n              maxRows={4}\r\n              sx={{\r\n                input: { color: 'white', height: '100%' },\r\n                '& .MuiInputBase-root,.MuiInputBase-root:hover': {\r\n                  height: '100%',\r\n                  color: 'white',\r\n                  '& > fieldset': {\r\n                    borderColor: '#E0E3E755 !important',\r\n                    borderWidth: 1,\r\n                  },\r\n                },\r\n              }}\r\n              style={{ width: '100%', height: '100%' }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  )\r\n\r\n  const content = () =>\r\n    collectionData.quizzes.length === 0 ? (\r\n      drawerAddNewQuiz()\r\n    ) : (\r\n      <Box\r\n        position={'relative'}\r\n        height={'calc(100vh - 7rem)'}\r\n        minHeight={'calc(100vh - 7rem)'}\r\n        display={'flex'}\r\n        flexDirection={'column'}\r\n      >\r\n        {questionTitle()}\r\n        <Box\r\n          sx={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            paddingLeft: '5rem',\r\n            flexGrow: 1,\r\n          }}\r\n        >\r\n          <Grid container item xs={12} spacing={5} sx={{ flexGrow: '1 !important' }}>\r\n            <Grid container item xs={5}>\r\n              {question()}\r\n            </Grid>\r\n            <Grid container item xs={7}>\r\n              {visual()}\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item>\r\n            {options()}\r\n          </Grid>\r\n        </Box>\r\n        {questionTimer()}\r\n        {drawer()}\r\n      </Box>\r\n    )\r\n\r\n  return (\r\n    <div>\r\n      {content()}\r\n      <LoadingComponent isLoading={isLoading} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default connect(mapStateToProps)(EditQuizContainer)\r\n","import EditQuizContainer from 'features/quizArchive/components/EditQuiz'\r\n\r\nconst Page = () => <>\r\n  <EditQuizContainer />\r\n</>\r\n\r\nexport default Page\r\n"],"names":["dispatch","useAppDispatch","selects","useAppSelector","quizArchiveSelectors","quizList","quizCollectionList","editQuiz","editCollection","getQuizCollectionList","useCallback","quizArchiveActions","getQuizCollection","data","updateQuizCollection","deleteQuizCollection","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","cloudStorage","getAnalytics","getStorage","getQuizStorageRef","postLocation","arguments","length","undefined","ref","concat","usePrompt","message","when","blocker","navigator","useContext","NavigationContext","useEffect","unblock","block","tx","autoUnblockingTx","_objectSpread","retry","useBlocker","window","confirm","_ref","_ref$file","file","_ref$url","url","parentDiv","useRef","viewerRef","ifFirstLoad","_useState","useState","_useState2","_slicedToArray","isRefresh","setIsRefresh","current","OV","viewer","backgroundColor","defaultColor","edgeSettings","onModelLoaded","console","log","GetViewer","Resize","dt","DataTransfer","items","add","fileList","Array","from","files","LoadModelFromFileList","splits","split","ext","inputFiles","Url","LoadModelFromInputFiles","prev","model","renderer","resetState","Clear","canvas","getContext","getExtension","loseContext","tempClone","cloneNode","parentNode","replaceChild","removeChild","children","_jsx","_Fragment","style","display","justifyContent","width","height","role","className","TimerTextField","styled","TextField","borderColor","borderWidth","borderLeftWidth","padding","optionColors","red","blue","green","orange","connect","state","authData","authentication","isLoading","global","setIsLoading","globalActions","quizArchive","props","isFirstLoad","id","useParams","editCollectionSelector","useSelector","navigate","useNavigate","_useQuizArchiveServic","useQuizArchiveService","_React$useState","React","initQuizCollectionDto","_React$useState2","collectionData","setCollectionData","_React$useState3","_React$useState4","activeQuizIndex","setActiveQuizIndex","currentQuiz","quizzes","btnSize","_React$useState5","_React$useState6","visualState","setVisualState","_React$useState7","_React$useState8","imageFile","setImageFile","_React$useState9","_React$useState10","modelFile","setModelFile","inputFileRef","isNotQuizImage","image","isNotQuizModel","eid","parseInt","Number","isNaN","alert","eId","JSON","stringify","checkIfIsChangeAndNotSave","checkIfQuizIsChangeAndNotSave","uploadQuizFile","_asyncToGenerator","_regeneratorRuntime","mark","_callee","jwtData","storageRef","response","wrap","_context","next","getJwtData","abrupt","name","uploadBytes","sent","getDownloadURL","stop","_x","apply","assignFileToQuiz","_callee2","promiseFunc","urls","newData","_context2","push","Promise","all","map","quiz","idx","validateForm","question","trim","answers","filter","answer","duration","handleSaveClick","_callee3","validateMsg","_context3","handleDeleteClick","_callee4","_context4","isNewQuestion","_","prev1","handleDeleteVisual","_React$useState11","_React$useState12","isOpenDrawer","setIsOpenDrawer","anchor","toggleDrawer","open","handleAddNewClick","_toConsumableArray","initQuizDto","drawerAddNewQuiz","Box","marginTop","_jsxs","IconButton","onClick","borderRadius","images","AddIcon","handleSelectQuizClick","index","drawer","Drawer","onClose","sx","quizData","Grid","container","item","xs","flexDirection","Typography","textAlign","Tooltip","title","DeleteIcon","Button","variant","aspectRatio","objectFit","alt","src","spacing","correctIdx","alignItems","CheckIcon","drawerItem","questionTitle","_currentQuiz$eId","marginBottom","paddingX","marginLeft","KeyboardDoubleArrowLeftIcon","KeyboardDoubleArrowRightIcon","marginRight","SaveIcon","visual","is3D","button3d","disabled","ViewInAr","button2d","Image","activeFileTypeString","isAdd","addOrUpdateButton","click","EditIcon","direction","flexGrow","maxHeight","position","paddingRight","alignSelf","border","Basic3DViewer","URL","createObjectURL","left","gap","evt","currentTarget","value","onChange","_ref5","_evt$target$files","target","type","hidden","accept","minHeight","paddingLeft","required","multiline","maxRows","input","color","rowSpacing","columnSpacing","cursor","ans","top","label","InputProps","inputProps","min","max","LoadingComponent","EditQuizContainer"],"sourceRoot":""}